#!/bin/bash

crosspi_pkg_dirname() {
  [ ! -z ${PKG_EXTRACTED_DIRNAME} ] && echo ${PKG_EXTRACTED_DIRNAME} || echo ${PKG_NAME}
}

crosspi_pkg_set_env() {
  crosspi_mkdir_tmp
  
  local PKG_DIRNAME=$(crosspi_pkg_dirname)
  
  PKG_SRC_DIR=${CROSSPI_TMP_BUILD_DIR}/${PKG_DIRNAME}
  
  if [ ! -z ${PKG_REQUIRE_SEPERATED_BUILD_DIR} ]; then
    PKG_BUILD_DIR=${CROSSPI_TMP_BUILD_DIR}/${PKG_DIRNAME}-build
    mkdir -p ${PKG_BUILD_DIR}
  else
    PKG_BUILD_DIR=${PKG_SRC_DIR}
  fi
  
  if [ ! -z ${PKG_URL} ]; then
    PKG_SRC_FILENAME=$(basename ${PKG_URL})
    PKG_TMP_SRC_FILE=${CROSSPI_TMP_DOWNLOAD_DIR}/${PKG_SRC_FILENAME}
  fi
  PKG_TMP_LOG_FILE=${CROSSPI_TMP_LOG_DIR}/${CROSSPI_SHELL}-${SCRIPT_NAME}
  
  for PKG_EXTRA_INDEX in ${!PKG_EXTRA_URLS[@]}
  do
    local PKG_EXTRA_URL=${PKG_EXTRA_URLS[$PKG_EXTRA_INDEX]}
    local PKG_EXTRA_FILENAME=$(basename ${PKG_EXTRA_URL})
    local PKG_TMP_EXTRA_FILE=${CROSSPI_TMP_DOWNLOAD_DIR}/${PKG_EXTRA_FILENAME}
    PKG_TMP_EXTRA_FILES[$PKG_EXTRA_INDEX]=${PKG_TMP_EXTRA_FILE}
  done
  
  # Set defaults
  PKG_EXTRACT_IN_DIR=${PKG_EXTRACT_IN_DIR:-1}
  PKG_REQUIRE_SEPERATED_BUILD_DIR=${PKG_REQUIRE_SEPERATED_BUILD_DIR:-0}
  PKG_NO_CLEANUP=${PKG_NO_CLEANUP:-0}
}

crosspi_pkg_download() {
  if [ -z ${PKG_URL} ]; then
    return 0
  fi
  
  log_info_msg "Downloading ${PKG_SRC_FILENAME}..."
  wget ${PKG_URL} -O ${PKG_TMP_SRC_FILE} -a ${PKG_TMP_LOG_FILE}
  crosspi_download_file ${PKG_URL}
  evaluate_retval || exit 1
  
  for PKG_EXTRA_INDEX in ${!PKG_EXTRA_URLS[@]}
  do
    local PKG_EXTRA_URL=${PKG_EXTRA_URLS[$PKG_EXTRA_INDEX]}
    local PKG_EXTRA_FILENAME=$(basename ${PKG_EXTRA_URL})
    
    log_info_msg "Downloading ${PKG_EXTRA_FILENAME}..."
    wget ${PKG_EXTRA_URL} -O ${PKG_TMP_EXTRA_FILES[$PKG_EXTRA_INDEX]} -a ${PKG_TMP_LOG_FILE}
    evaluate_retval || exit 1
  done
}

crosspi_pkg_extract() {
  if [ ! -z ${PKG_TMP_SRC_FILE} ] && [ -f ${PKG_TMP_SRC_FILE} ]; then
    log_info_msg "Extracting ${PKG_SRC_FILENAME}..."
    if is_true ${PKG_EXTRACT_IN_DIR}; then
      tar xf ${PKG_TMP_SRC_FILE} -C ${CROSSPI_TMP_BUILD_DIR} &>> ${PKG_TMP_LOG_FILE}
    else
      mkdir -p ${PKG_SRC_DIR} &>> ${PKG_TMP_LOG_FILE}
      tar xf ${PKG_TMP_SRC_FILE} -C ${PKG_SRC_DIR} &>> ${PKG_TMP_LOG_FILE}
    fi
    evaluate_retval || exit 1
  fi
}

crosspi_pkg_clear_log() {
  >${PKG_TMP_LOG_FILE}
}

crosspi_pkg_cleanup() {
  if ! is_true ${PKG_NO_CLEANUP}; then
    log_info_msg "Cleaning..."
    if [ ! -z ${PKG_URL} ]; then
      rm -f ${PKG_TMP_SRC_FILE} &>> ${PKG_TMP_LOG_FILE}
    fi
    
    if [ ! -z "${PKG_EXTRA_URLS[*]}" ]; then
      rm -f ${PKG_TMP_EXTRA_FILES[*]} &>> ${PKG_TMP_LOG_FILE}
    fi
    
    rm -Rf ${PKG_SRC_DIR} &>> ${PKG_TMP_LOG_FILE}
    rm -Rf ${PKG_BUILD_DIR} &>> ${PKG_TMP_LOG_FILE}
    log_success_msg
  fi
}

crosspi_pkg_enter_src_directory() {
  if [ -d ${PKG_SRC_DIR} ]; then
    log_info_msg "Entering source directory..."
    cd ${PKG_SRC_DIR} &>> ${PKG_TMP_LOG_FILE}
    evaluate_retval || exit 1
  fi
}

crosspi_pkg_enter_build_directory() {
  if [ -d ${PKG_BUILD_DIR} ]; then
    log_info_msg "Entering build directory..."
    cd ${PKG_BUILD_DIR} &>> ${PKG_TMP_LOG_FILE}
    evaluate_retval || exit 1
  fi
}

crosspi_pkg_pretty_print_func_name() {
  local FUNC_NAME=${1}
  local TOKENS=(${FUNC_NAME//_/ })
  local PRETTY_STRING="${TOKENS[1]}:${TOKENS[2]}"
  PRETTY_STRING=${PRETTY_STRING%:}
  PRETTY_STRING=${PRETTY_STRING^}
  echo ${PRETTY_STRING}
}

crosspi_pkg_call_func() {
	if is_function ${1}; then
		log_info_msg "$(crosspi_pkg_pretty_print_func_name ${1})..."
		${1} &>> ${PKG_TMP_LOG_FILE}
		evaluate_retval || exit 1
	fi
}